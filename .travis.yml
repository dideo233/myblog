#Travis 설정 파일
language: java
jdk:
  - openjdk11

#master 브랜치 push 시 travis CI 수행
branches:
  only:
    - master

before_install:
  - chmod +x gradlew
  - chmod +x scripts/deploy.sh

before_deploy:
  - mkdir -p before-deploy #zip에 포함시킬 파일을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy ./* #before-deploy로 이동시킨 후 전체 압축
  - cd ../ && mkdir -p deploy #상위 디렉토리로 이동 후 deploy 생성
  - mv before-deploy/before-deploy.zip deploy/myblog.zip #deploy로 암축 파일 이동
  
#외부 서비스와 연동될 행위 선언
deploy:
  #AWS S3 설정
  - provider: s3
    #Travis Repo에 세팅된 key
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: myblog-webservice-build #S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private #zip 파일 접근 private
    local_dir: deploy #before_deploy에서 생성한 디렉토리. 이 위치의 파일만 S3로 전송
    wait-until-deployed: true
    on:
      all_branches: true

  #AWS CodeDeploy 설정
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: myblog-webservice-build #S3 버킷
    key: myblog.zip #빌드 파일 압축해서 전달
    bundle_type: zip #압축 확장자
    application: myblog-webservice #CodeDeploy 어플리케이션
    deployment_group: myblog-webservice-group #CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true
    on:
      all_branches: true

# travis CI 서버 home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

#master 브랜치 push 시 수행
script: "./gradlew clean build"

# CI 실행 완료 시 email로 알람
notifications:
  email:
    recipients:
      - eltmvpdj11@gmail.com

